# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})


# Global tags can be specified here in key="value" format.
[global_tags]

[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.  Increasing this value
  ## allows for longer periods of output downtime without dropping metrics at the
  ## cost of higher maximum memory usage.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# # Configuration for sending metrics to InfluxDBv2
 [[outputs.influxdb_v2]]
#   ## The URLs of the InfluxDB cluster nodes.
   urls = ["http://127.0.0.1:8086"]
#
#   ## Token for authentication.
   token = "<token>"
#
#   ## Organization is the name of the organization you wish to write to; must exist.
   organization = "<org>"
#
#   ## Destination bucket to write into.  Use separate buckets to prevent collisions
   bucket = "<bucket1>"

#   ## Setting the filter to prevent data collisions
   namepass = ["fireboard*"]

[[outputs.influxdb_v2]]
   urls = ["http://127.0.0.1:8086"]
   token = "<token>"
   organization = "<org>"
   bucket = "<bucket2>"
   namepass = ["openweathermap*"]

[[outputs.influxdb_v2]]
   urls = ["http://127.0.0.1:8086"]
   token = "<token>"
   organization = "<org>"
   bucket = "<bucket3>"
   namepass = ["weathergov*"]

[[outputs.influxdb_v2]]
   urls = ["http://127.0.0.1:8086"]
   token = "<token>"
   organization = "<org>"
   bucket = "<bucket4>"
   namepass = ["kiwa*"]

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.fireboard]]
  auth_token = "<auth_key>"


# Openweathermap
[[inputs.http]]
  urls = [
    "http://api.openweathermap.org/data/2.5/weather?id=<station-id>&units=imperial&appid=<api-key>"
  ]
  # name_override is is the name passed to the outputs to keep things sane
  name_override = "openweathermap"
  data_format = "json"
  json_time_key = "dt"
  json_time_format = "unix"
  tag_keys = ["name"]

[[inputs.http]]
  interval = "60s"
  urls = ["https://api.weather.gov/stations/KCHD/observations/latest"]
  # Weather.gov likes the user-agent tagged with usage/app name and email in the event of API abuse
  headers = {"User-Agent" = "(<usage>, <email>)"}
  name_override = "weathergov"
  data_format = "json"
  tag_keys = ["properties"]

[[inputs.http]]
  interval = "60s"
  urls = ["https://api.weather.gov/stations/KIWA/observations/latest"]
  # Weather.gov likes the user-agent tagged with usage/app name and email in the event of API abuse
  headers = {"User-Agent" = "(<usage>, <email>)"}
  name_override = "kiwa"
  data_format = "json"
  tag_keys = ["properties"]